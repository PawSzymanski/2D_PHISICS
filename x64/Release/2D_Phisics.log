  AutisticCmath.cpp
  Container.cpp
  isCollidingFuns.cpp
isCollidingFuns.cpp(39): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
isCollidingFuns.cpp(59): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  main.cpp
  MainLoop.cpp
MainLoop.cpp(13): warning C4305: 'argument': truncation from 'double' to 'float'
D:\entityx-build\entityx/Entity.h(582): warning C4291: 'void *operator new(std::size_t,void *) throw()': no matching operator delete found; memory will not be freed if initialization throws an exception
  C:\MSVM\VC\include\vcruntime_new.h(86): note: see declaration of 'operator new'
  D:\entityx-build\entityx/Entity.h(866): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::EntityManager::assign<C,sf::Vector2f&>(entityx::Entity::Id,sf::Vector2f &)' being compiled
          with
          [
              Derived=Position,
              C=Position
          ]
  MainLoop.cpp(115): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::Entity::assign<Position,sf::Vector2f&>(sf::Vector2f &)' being compiled
          with
          [
              Derived=Position
          ]
D:\entityx-build\entityx/Entity.h(582): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
  D:\entityx-build\entityx/Entity.h(866): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::EntityManager::assign<C,_Ty>(entityx::Entity::Id,_Ty &&)' being compiled
          with
          [
              Derived=Rotation,
              C=Rotation,
              _Ty=int
          ]
  MainLoop.cpp(116): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::Entity::assign<Rotation,int>(int &&)' being compiled
          with
          [
              Derived=Rotation
          ]
D:\entityx-build\entityx/Entity.h(582): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
  D:\entityx-build\entityx/Entity.h(866): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::EntityManager::assign<C,_Ty>(entityx::Entity::Id,_Ty &&)' being compiled
          with
          [
              Derived=Friction,
              C=Friction,
              _Ty=double
          ]
  MainLoop.cpp(126): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::Entity::assign<Friction,double>(double &&)' being compiled
          with
          [
              Derived=Friction
          ]
  CollisionSystem.cpp
D:\entityx-build\entityx/Entity.h(478): warning C4267: 'argument': conversion from 'size_t' to 'entityx::uint32_t', possible loss of data
  D:\entityx-build\entityx/Entity.h(478): note: while compiling class template member function 'entityx::EntityManager::UnpackingView<Derived,Type>::Iterator entityx::EntityManager::UnpackingView<Derived,Type>::end(void)'
          with
          [
              Derived=Position
          ]
  systems\CollisionSystem.cpp(65): note: see reference to function template instantiation 'entityx::EntityManager::UnpackingView<Derived,Type>::Iterator entityx::EntityManager::UnpackingView<Derived,Type>::end(void)' being compiled
          with
          [
              Derived=Position
          ]
  systems\CollisionSystem.cpp(65): note: see reference to class template instantiation 'entityx::EntityManager::UnpackingView<Derived,Type>' being compiled
          with
          [
              Derived=Position
          ]
  ForcesSystem.cpp
D:\entityx-build\entityx/Entity.h(478): warning C4267: 'argument': conversion from 'size_t' to 'entityx::uint32_t', possible loss of data
  D:\entityx-build\entityx/Entity.h(478): note: while compiling class template member function 'entityx::EntityManager::UnpackingView<Derived,AngularVelocity,LinearForce,AngularForce>::Iterator entityx::EntityManager::UnpackingView<Derived,AngularVelocity,LinearForce,AngularForce>::end(void)'
          with
          [
              Derived=LinearVelocity
          ]
  systems\ForcesSystem.cpp(24): note: see reference to function template instantiation 'entityx::EntityManager::UnpackingView<Derived,AngularVelocity,LinearForce,AngularForce>::Iterator entityx::EntityManager::UnpackingView<Derived,AngularVelocity,LinearForce,AngularForce>::end(void)' being compiled
          with
          [
              Derived=LinearVelocity
          ]
  systems\ForcesSystem.cpp(24): note: see reference to class template instantiation 'entityx::EntityManager::UnpackingView<Derived,AngularVelocity,LinearForce,AngularForce>' being compiled
          with
          [
              Derived=LinearVelocity
          ]
  MouseDragSystem.cpp
D:\entityx-build\entityx/Entity.h(478): warning C4267: 'argument': conversion from 'size_t' to 'entityx::uint32_t', possible loss of data
  D:\entityx-build\entityx/Entity.h(478): note: while compiling class template member function 'entityx::EntityManager::UnpackingView<Derived,Circle,Transform,LinearVelocity,AngularVelocity,Rotation>::Iterator entityx::EntityManager::UnpackingView<Derived,Circle,Transform,LinearVelocity,AngularVelocity,Rotation>::end(void)'
          with
          [
              Derived=Position
          ]
  systems\MouseDragSystem.cpp(35): note: see reference to function template instantiation 'entityx::EntityManager::UnpackingView<Derived,Circle,Transform,LinearVelocity,AngularVelocity,Rotation>::Iterator entityx::EntityManager::UnpackingView<Derived,Circle,Transform,LinearVelocity,AngularVelocity,Rotation>::end(void)' being compiled
          with
          [
              Derived=Position
          ]
  systems\MouseDragSystem.cpp(35): note: see reference to class template instantiation 'entityx::EntityManager::UnpackingView<Derived,Circle,Transform,LinearVelocity,AngularVelocity,Rotation>' being compiled
          with
          [
              Derived=Position
          ]
D:\entityx-build\entityx/Entity.h(582): warning C4291: 'void *operator new(std::size_t,void *) throw()': no matching operator delete found; memory will not be freed if initialization throws an exception
  C:\MSVM\VC\include\vcruntime_new.h(86): note: see declaration of 'operator new'
  D:\entityx-build\entityx/Entity.h(866): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::EntityManager::assign<C,_Ty,_Ty,const sf::Color&>(entityx::Entity::Id,_Ty &&,_Ty &&,const sf::Color &)' being compiled
          with
          [
              Derived=Line,
              C=Line,
              _Ty=sf::Vector2<float>
          ]
  systems\MouseDragSystem.cpp(43): note: see reference to function template instantiation 'entityx::ComponentHandle<Derived,entityx::EntityManager> entityx::Entity::assign<Line,sf::Vector2<float>,sf::Vector2<float>,const sf::Color&>(sf::Vector2<float> &&,sf::Vector2<float> &&,const sf::Color &)' being compiled
          with
          [
              Derived=Line
          ]
  MovementSystem.cpp
D:\entityx-build\entityx/Entity.h(478): warning C4267: 'argument': conversion from 'size_t' to 'entityx::uint32_t', possible loss of data
  D:\entityx-build\entityx/Entity.h(478): note: while compiling class template member function 'entityx::EntityManager::UnpackingView<Derived,Rotation,LinearVelocity,AngularVelocity,Transform>::Iterator entityx::EntityManager::UnpackingView<Derived,Rotation,LinearVelocity,AngularVelocity,Transform>::end(void)'
          with
          [
              Derived=Position
          ]
  systems\MovementSystem.cpp(22): note: see reference to function template instantiation 'entityx::EntityManager::UnpackingView<Derived,Rotation,LinearVelocity,AngularVelocity,Transform>::Iterator entityx::EntityManager::UnpackingView<Derived,Rotation,LinearVelocity,AngularVelocity,Transform>::end(void)' being compiled
          with
          [
              Derived=Position
          ]
  systems\MovementSystem.cpp(22): note: see reference to class template instantiation 'entityx::EntityManager::UnpackingView<Derived,Rotation,LinearVelocity,AngularVelocity,Transform>' being compiled
          with
          [
              Derived=Position
          ]
  RenderSystem.cpp
D:\entityx-build\entityx/Entity.h(478): warning C4267: 'argument': conversion from 'size_t' to 'entityx::uint32_t', possible loss of data
  D:\entityx-build\entityx/Entity.h(478): note: while compiling class template member function 'entityx::EntityManager::UnpackingView<Derived,Transform>::Iterator entityx::EntityManager::UnpackingView<Derived,Transform>::end(void)'
          with
          [
              Derived=VertexArray
          ]
  systems\RenderSystem.cpp(38): note: see reference to function template instantiation 'entityx::EntityManager::UnpackingView<Derived,Transform>::Iterator entityx::EntityManager::UnpackingView<Derived,Transform>::end(void)' being compiled
          with
          [
              Derived=VertexArray
          ]
  systems\RenderSystem.cpp(38): note: see reference to class template instantiation 'entityx::EntityManager::UnpackingView<Derived,Transform>' being compiled
          with
          [
              Derived=VertexArray
          ]
  Generating code
  14 of 2390 functions ( 0.6%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    8 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  2D_PHISICS.vcxproj -> E:\VSprojects\2D_PHISICS\x64\Release\2D_PHISICS.exe
  2D_PHISICS.vcxproj -> E:\VSprojects\2D_PHISICS\x64\Release\2D_PHISICS.pdb (Full PDB)
